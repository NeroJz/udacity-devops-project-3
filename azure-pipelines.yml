name: Azure Pipelines
variables:
  python.version: '3.7.6'
  appname: 'kumhoe-AppService'
stages:
  - stage: ProvisionIaC
    displayName: Provisioning Azure Resources
    jobs:
    - job: ProvisionAppService
      displayName: Provisioning App Service
      pool:
        vmImage: 'Ubuntu-18.04'
      steps:
      - task: DownloadSecureFile@1
        name: terraformtfvars
        displayName: Download terraform.tfvars
        inputs:
          secureFile: 'terraform.tfvars'

      - task: DownloadSecureFile@1
        name: maintf
        displayName: Download main.tf
        inputs:
          secureFile: 'main.tf'

      - task: InstallSSHKey@0
        name: InstallSSHKey
        displayName: Install SSH Key
        inputs:
          knownHostsEntry: 'default'
          sshKeySecureFile: 'id_rsa'

      - task: Bash@3
        displayName: Copy terraform.tfvars
        inputs:
          targetType: 'inline'
          script: cp $(Agent.TempDirectory)/terraform.tfvars $(System.DefaultWorkingDirectory)/terraform

      - task: Bash@3
        displayName: Copy main.tf
        inputs:
          targetType: 'inline'
          script: cp $(Agent.TempDirectory)/main.tf $(System.DefaultWorkingDirectory)/terraform
      
      - task: TerraformInstaller@0
        displayName: Install Terraform
        inputs:
          terraformVersion: '1.1.4'

      - task: TerraformTaskV1@0
        displayName: Terraform Init
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '${System.DefaultWorkingDirectory}/terraform'
      
      - task: TerraformTaskV1@0
        displayName: Terraform Plan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

      - task: TerraformTaskV1@0
        displayName: Terraform Apply
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/terraform'

